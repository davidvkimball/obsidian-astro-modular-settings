[1mdiff --git a/src/ui/tabs/ConfigTab.ts b/src/ui/tabs/ConfigTab.ts[m
[1mindex e24892d..a9ec544 100644[m
[1m--- a/src/ui/tabs/ConfigTab.ts[m
[1m+++ b/src/ui/tabs/ConfigTab.ts[m
[36m@@ -25,40 +25,41 @@[m [mexport class ConfigTab extends TabRenderer {[m
 				dropdown.onChange(async (value) => {[m
 					// Show warning modal for template changes[m
 					const changes = this.getTemplateChanges(value as any);[m
[31m-					if (changes.length > 0) {[m
[31m-						const modal = new PresetWarningModal([m
[31m-							this.app,[m
[31m-							changes,[m
[31m-							async () => {[m
[31m-								// User confirmed - apply the template[m
[31m-								settings.currentTemplate = value as any;[m
[31m-								await this.plugin.saveData(settings);[m
[32m+[m					[32mconst modal = new PresetWarningModal([m
[32m+[m						[32mthis.app,[m
[32m+[m						[32mchanges,[m
[32m+[m						[32masync () => {[m
[32m+[m							[32m// User confirmed - apply exactly like TemplateStep does[m
[32m+[m							[32mtry {[m
[32m+[m								[32m// Update template settings exactly like the wizard does[m
[32m+[m								[32mawait this.updatePluginSettingsWithTemplate(value);[m
 								[m
[31m-								try {[m
[31m-									await this.applyCurrentConfiguration();[m
[32m+[m								[32m// Apply the configuration[m
[32m+[m								[32mconst presetSuccess = await (this.plugin as any).configManager.applyPreset({[m
[32m+[m									[32mname: settings.currentTemplate,[m
[32m+[m									[32mdescription: '',[m
[32m+[m									[32mfeatures: settings.features,[m
[32m+[m									[32mtheme: settings.currentTheme,[m
[32m+[m									[32mcontentOrganization: settings.contentOrganization,[m
[32m+[m									[32mconfig: settings[m
[32m+[m								[32m});[m
[32m+[m[41m								[m
[32m+[m								[32mif (presetSuccess) {[m
 									new Notice(`Template changed to ${value} and applied to config.ts`);[m
[31m-								} catch (error) {[m
[31m-									new Notice(`Failed to apply template change: ${error instanceof Error ? error.message : String(error)}`);[m
[32m+[m								[32m} else {[m
[32m+[m									[32mnew Notice('Failed to apply template to config.ts');[m
 								}[m
[31m-							},[m
[31m-							() => {[m
[31m-								// User cancelled - reset dropdown to current value[m
[32m+[m							[32m} catch (error) {[m
[32m+[m								[32mnew Notice(`Failed to apply template change: ${error instanceof Error ? error.message : String(error)}`);[m
 								dropdown.setValue(settings.currentTemplate);[m
 							}[m
[31m-						);[m
[31m-						modal.open();[m
[31m-					} else {[m
[31m-						// No changes needed - apply directly[m
[31m-						settings.currentTemplate = value as any;[m
[31m-						await this.plugin.saveData(settings);[m
[31m-						[m
[31m-						try {[m
[31m-							await this.applyCurrentConfiguration();[m
[31m-							new Notice(`Template changed to ${value} and applied to config.ts`);[m
[31m-						} catch (error) {[m
[31m-							new Notice(`Failed to apply template change: ${error instanceof Error ? error.message : String(error)}`);[m
[32m+[m						[32m},[m
[32m+[m						[32m() => {[m
[32m+[m							[32m// User cancelled - reset dropdown to current value[m
[32m+[m							[32mdropdown.setValue(settings.currentTemplate);[m
 						}[m
[31m-					}[m
[32m+[m					[32m);[m
[32m+[m					[32mmodal.open();[m
 				});[m
 			});[m
 [m
[36m@@ -168,20 +169,117 @@[m [mexport class ConfigTab extends TabRenderer {[m
 		}[m
 	}[m
 [m
[32m+[m	[32mprivate async updatePluginSettingsWithTemplate(template: string): Promise<void> {[m
[32m+[m		[32m// Get the current plugin settings[m
[32m+[m		[32mconst settings = (this.plugin as any).settings;[m
[32m+[m[41m		[m
[32m+[m		[32m// Load the template preset from JSON[m
[32m+[m		[32mconst templatePreset = (this.plugin as any).configManager.getTemplatePreset(template);[m
[32m+[m		[32mif (!templatePreset || !templatePreset.config) {[m
[32m+[m			[32mnew Notice('Template preset not found');[m
[32m+[m			[32mreturn;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m// Update settings from the preset's config[m
[32m+[m		[32msettings.currentTemplate = template;[m
[32m+[m[41m		[m
[32m+[m		[32m// Update theme if defined in preset[m
[32m+[m		[32mif (templatePreset.config.currentTheme) {[m
[32m+[m			[32msettings.currentTheme = templatePreset.config.currentTheme;[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32m// Update content organization if defined[m
[32m+[m		[32mif (templatePreset.config.contentOrganization) {[m
[32m+[m			[32msettings.contentOrganization = templatePreset.config.contentOrganization;[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32m// Update features from preset (but preserve comments setting)[m
[32m+[m		[32mif (templatePreset.config.features) {[m
[32m+[m			[32mconst currentComments = settings.features.comments;[m
[32m+[m			[32msettings.features = { ...settings.features, ...templatePreset.config.features };[m
[32m+[m			[32msettings.features.comments = currentComments; // Restore comments setting[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32m// Update optional content types - standard has them, others don't[m
[32m+[m		[32mconst isStandardOrCustom = template === 'standard' || template === 'custom';[m
[32m+[m		[32msettings.optionalContentTypes = {[m
[32m+[m			[32mprojects: isStandardOrCustom,[m
[32m+[m			[32mdocs: isStandardOrCustom[m
[32m+[m		[32m};[m
[32m+[m
[32m+[m		[32m// Save the updated settings[m
[32m+[m		[32mawait this.plugin.saveData(settings);[m
[32m+[m	[32m}[m
[32m+[m
 	private getTemplateChanges(templateId: string): string[] {[m
 		const changes: string[] = [];[m
[32m+[m		[32mconst settings = this.getSettings();[m
 		[m
[31m-		// Get the template preset[m
[31m-		const template = TEMPLATE_OPTIONS.find(t => t.id === templateId);[m
[31m-		if (!template) return changes;[m
[31m-[m
[31m-		// This is a simplified version - in reality, you'd need to compare[m
[31m-		// the current settings with what the template would set[m
[31m-		// For now, we'll show a generic message for template changes[m
[31m-		changes.push('Theme and color scheme');[m
[31m-		changes.push('Feature toggles and settings');[m
[31m-		changes.push('Typography and font settings');[m
[31m-		changes.push('Content organization settings');[m
[32m+[m		[32m// Load the template preset from JSON[m
[32m+[m		[32mconst templatePreset = (this.plugin as any).configManager.getTemplatePreset(templateId);[m
[32m+[m		[32mif (!templatePreset || !templatePreset.config) {[m
[32m+[m			[32mchanges.push('This will apply the template settings to your configuration.');[m
[32m+[m			[32mreturn changes;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mconst newConfig = templatePreset.config;[m
[32m+[m		[32mconst featureChanges = [];[m
[32m+[m
[32m+[m		[32m// Compare theme[m
[32m+[m		[32mif (newConfig.currentTheme && settings.currentTheme !== newConfig.currentTheme) {[m
[32m+[m			[32mfeatureChanges.push(`Theme: ${settings.currentTheme} â†’ ${newConfig.currentTheme}`);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m// Compare all features from the preset[m
[32m+[m		[32mif (newConfig.features) {[m
[32m+[m			[32m// Key features to highlight (excluding comments which is user-configured)[m
[32m+[m			[32mconst keyFeatures = [[m
[32m+[m				[32m{ key: 'graphView', label: 'Graph view' },[m
[32m+[m				[32m{ key: 'tableOfContents', label: 'Table of contents' },[m
[32m+[m				[32m{ key: 'readingTime', label: 'Reading time' },[m
[32m+[m				[32m{ key: 'linkedMentions', label: 'Linked mentions' },[m
[32m+[m				[32m{ key: 'linkedMentionsCompact', label: 'Compact linked mentions' },[m
[32m+[m				[32m{ key: 'postNavigation', label: 'Post navigation' },[m
[32m+[m				[32m{ key: 'showSocialIconsInFooter', label: 'Social icons in footer' },[m
[32m+[m				[32m{ key: 'featureButton', label: 'Feature button' }[m
[32m+[m			[32m];[m
[32m+[m
[32m+[m			[32mkeyFeatures.forEach(({ key, label }) => {[m
[32m+[m				[32mconst oldFeature = (settings.features as any)[key];[m
[32m+[m				[32mconst newFeature = (newConfig.features as any)[key];[m
[32m+[m				[32mif (newFeature !== undefined && oldFeature !== newFeature) {[m
[32m+[m					[32mconst oldVal = typeof oldFeature === 'boolean'[m[41m [m
[32m+[m						[32m? (oldFeature ? 'ON' : 'OFF')[m
[32m+[m						[32m: oldFeature;[m
[32m+[m					[32mconst newVal = typeof newFeature === 'boolean'[m
[32m+[m						[32m? (newFeature ? 'ON' : 'OFF')[m
[32m+[m						[32m: newFeature;[m
[32m+[m					[32mfeatureChanges.push(`${label}: ${oldVal} â†’ ${newVal}`);[m
[32m+[m				[32m}[m
[32m+[m			[32m});[m
[32m+[m
[32m+[m			[32m// Check quickActions changes[m
[32m+[m			[32mif (newConfig.features.quickActions && settings.features.quickActions) {[m
[32m+[m				[32mif (newConfig.features.quickActions.enabled !== settings.features.quickActions.enabled) {[m
[32m+[m					[32mfeatureChanges.push(`Quick actions: ${settings.features.quickActions.enabled ? 'ON' : 'OFF'} â†’ ${newConfig.features.quickActions.enabled ? 'ON' : 'OFF'}`);[m
[32m+[m				[32m}[m
[32m+[m			[32m}[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32m// Compare optional content types[m
[32m+[m		[32mconst isStandardOrCustom = templateId === 'standard' || templateId === 'custom';[m
[32m+[m		[32mif (settings.optionalContentTypes?.projects !== isStandardOrCustom) {[m
[32m+[m			[32mfeatureChanges.push(`Projects content type: ${settings.optionalContentTypes?.projects ? 'enabled' : 'disabled'} â†’ ${isStandardOrCustom ? 'enabled' : 'disabled'}`);[m
[32m+[m		[32m}[m
[32m+[m		[32mif (settings.optionalContentTypes?.docs !== isStandardOrCustom) {[m
[32m+[m			[32mfeatureChanges.push(`Docs content type: ${settings.optionalContentTypes?.docs ? 'enabled' : 'disabled'} â†’ ${isStandardOrCustom ? 'enabled' : 'disabled'}`);[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mif (featureChanges.length > 0) {[m
[32m+[m			[32mchanges.push(...featureChanges);[m
[32m+[m		[32m} else {[m
[32m+[m			[32mchanges.push('No changes needed - your settings already match this template.');[m
[32m+[m		[32m}[m
 		[m
 		return changes;[m
 	}[m
